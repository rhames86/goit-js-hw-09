{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GASpCC,YARqB,WACrBJ,EAAQ,CAAEH,WAAUC,S,GAOOA,GAE3BM,YAPoB,WACpBH,EAAO,CAAEJ,WAAUC,S,GAMOA,E,IAKhCO,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAOF,SAASG,cAAc,SACpCD,EAAKD,iBAAiB,UAAU,SAAAG,GAC9BA,EAAMC,iBAQN,IANA,IAAMC,EAAW,IAAIC,SAASL,GACxBM,EAAaC,OAAOH,EAASI,IAAI,UACjCC,EAAYF,OAAOH,EAASI,IAAI,SAChCE,EAASH,OAAOH,EAASI,IAAI,WAE/BG,EAAeL,EACVM,EAAI,EAAGA,GAAKF,EAAQE,IAC3BvB,EAAcuB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAGjD4B,OAAM,SAAAL,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBwB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAGjDoB,GAAgBF,C","sources":["src/js/04-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const fulfillPromise = () => {\n      resolve({ position, delay });\n    };\n    const rejectPromise = () => {\n      reject({ position, delay });\n    };\n\n    if (shouldResolve) {\n      setTimeout(fulfillPromise, delay);\n    } else {\n      setTimeout(rejectPromise, delay);\n    }\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const form = document.querySelector('.form');\n  form.addEventListener('submit', event => {\n    event.preventDefault();\n\n    const formData = new FormData(form);\n    const firstDelay = Number(formData.get('delay'));\n    const delayStep = Number(formData.get('step'));\n    const amount = Number(formData.get('amount'));\n\n    let currentDelay = firstDelay;\n    for (let i = 1; i <= amount; i++) {\n      createPromise(i, currentDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n      currentDelay += delayStep;\n    }\n  });\n});\n"],"names":["$ejkSG","parcelRequire","$2a48deccb4570335$var$createPromise","position","delay","Promise","resolve","reject","Math","random","setTimeout","document","addEventListener","form","querySelector","event","preventDefault","formData","FormData","firstDelay","Number","get","delayStep","amount","currentDelay","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.3b52efc6.js.map"}